"""payroll_fix_map_order

Revision ID: 47054cc45d49
Revises: 4561e498a7fd
Create Date: 2025-10-24 17:53:18.671202

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '47054cc45d49'
down_revision: Union[str, Sequence[str], None] = '4561e498a7fd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('salary_components',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('type', sa.Enum('earning', 'deduction', name='component_type_enum'), nullable=False),
    sa.Column('pf_wage_flag', sa.Boolean(), nullable=True),
    sa.Column('esi_wage_flag', sa.Boolean(), nullable=True),
    sa.Column('pt_applicable_flag', sa.Boolean(), nullable=True),
    sa.Column('lwf_applicable_flag', sa.Boolean(), nullable=True),
    sa.Column('taxability', sa.String(length=50), nullable=True),
    sa.Column('formula_expr', sa.Text(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_to', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('compliance_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('PF', 'ESIC', 'PT', 'LWF', name='compliance_type_enum'), nullable=False),
    sa.Column('period', sa.String(length=7), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('challan_ref', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('draft', 'filed', 'paid', name='compliance_status_enum'), nullable=True),
    sa.Column('submitted_by', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['submitted_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pay_cycles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('period_anchor_day', sa.Integer(), nullable=False),
    sa.Column('payday_rule', sa.JSON(), nullable=False),
    sa.Column('timezone', sa.String(length=64), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pay_policies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('holiday_paid', sa.Boolean(), nullable=True),
    sa.Column('weekly_off_paid', sa.Boolean(), nullable=True),
    sa.Column('monthly_fixed_paid_leaves', sa.Integer(), nullable=True),
    sa.Column('daily_paid_leave_allowed', sa.Boolean(), nullable=True),
    sa.Column('ot_factor_default', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('min_wage_check', sa.Boolean(), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_to', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_pay_policies_company_active', 'pay_policies', ['company_id', 'effective_from', 'effective_to'], unique=False)
    op.create_table('stat_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scope', sa.String(length=30), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.String(length=10), nullable=True),
    sa.Column('fy', sa.String(length=9), nullable=True),
    sa.Column('key', sa.String(length=80), nullable=False),
    sa.Column('value_json', sa.JSON(), nullable=False),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_to', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_statcfg_scope_key', 'stat_configs', ['scope', 'key'], unique=False)
    op.create_table('pay_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('cycle_id', sa.Integer(), nullable=True),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'locked', 'posted', name='payrun_status_enum'), nullable=True),
    sa.Column('retro_of_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['cycle_id'], ['pay_cycles.id'], ),
    sa.ForeignKeyConstraint(['retro_of_id'], ['pay_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('adjustments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('period', sa.String(length=7), nullable=False),
    sa.Column('type', sa.Enum('incentive', 'bonus', 'recovery', 'arrear', name='adjustment_type_enum'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('meta_json', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_adjustments_employee_id'), 'adjustments', ['employee_id'], unique=False)
    op.create_table('employee_pay_profile',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_to', sa.Date(), nullable=True),
    sa.Column('pay_type', sa.Enum('monthly_fixed', 'daily_wage', name='pay_type_enum'), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('per_day_override', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('ot_rate_override', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('monthly_gross', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('allowed_paid_leaves', sa.Integer(), nullable=True),
    sa.Column('pf_enabled', sa.Boolean(), nullable=True),
    sa.Column('esi_enabled', sa.Boolean(), nullable=True),
    sa.Column('pt_enabled', sa.Boolean(), nullable=True),
    sa.Column('lwf_enabled', sa.Boolean(), nullable=True),
    sa.Column('regime', sa.Enum('old', 'new', name='tax_regime_enum'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['trade_categories.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('employee_id', 'effective_from')
    )
    op.create_table('employee_salary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('component_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('formula_override', sa.Text(), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_to', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['salary_components.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_id', 'component_id', 'effective_from', name='uq_emp_comp_from')
    )
    op.create_index(op.f('ix_employee_salary_employee_id'), 'employee_salary', ['employee_id'], unique=False)
    op.create_table('pay_run_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pay_run_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('gross', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('earnings', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('deductions', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('net', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('pt', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('pf', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('esi', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('tds', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('lwf', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('remarks', sa.String(length=255), nullable=True),
    sa.Column('calc_meta', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['pay_run_id'], ['pay_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pay_run_items_employee_id'), 'pay_run_items', ['employee_id'], unique=False)
    op.create_index(op.f('ix_pay_run_items_pay_run_id'), 'pay_run_items', ['pay_run_id'], unique=False)
    op.create_table('pay_run_item_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('component_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('is_statutory', sa.Boolean(), nullable=True),
    sa.Column('calc_trace_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['salary_components.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['pay_run_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pay_run_item_lines_component_id'), 'pay_run_item_lines', ['component_id'], unique=False)
    op.create_index(op.f('ix_pay_run_item_lines_item_id'), 'pay_run_item_lines', ['item_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pay_run_item_lines_item_id'), table_name='pay_run_item_lines')
    op.drop_index(op.f('ix_pay_run_item_lines_component_id'), table_name='pay_run_item_lines')
    op.drop_table('pay_run_item_lines')
    op.drop_index(op.f('ix_pay_run_items_pay_run_id'), table_name='pay_run_items')
    op.drop_index(op.f('ix_pay_run_items_employee_id'), table_name='pay_run_items')
    op.drop_table('pay_run_items')
    op.drop_index(op.f('ix_employee_salary_employee_id'), table_name='employee_salary')
    op.drop_table('employee_salary')
    op.drop_table('employee_pay_profile')
    op.drop_index(op.f('ix_adjustments_employee_id'), table_name='adjustments')
    op.drop_table('adjustments')
    op.drop_table('pay_runs')
    op.drop_index('ix_statcfg_scope_key', table_name='stat_configs')
    op.drop_table('stat_configs')
    op.drop_index('ix_pay_policies_company_active', table_name='pay_policies')
    op.drop_table('pay_policies')
    op.drop_table('pay_cycles')
    op.drop_table('compliance_events')
    op.drop_table('salary_components')
    # ### end Alembic commands ###
